var documenterSearchIndex = {"docs":
[{"location":"reference/#Reference","page":"Reference","title":"Reference","text":"","category":"section"},{"location":"reference/","page":"Reference","title":"Reference","text":"​","category":"page"},{"location":"reference/#Contents","page":"Reference","title":"Contents","text":"","category":"section"},{"location":"reference/","page":"Reference","title":"Reference","text":"​","category":"page"},{"location":"reference/","page":"Reference","title":"Reference","text":"Pages = [\"reference.md\"]","category":"page"},{"location":"reference/","page":"Reference","title":"Reference","text":"​","category":"page"},{"location":"reference/#Index","page":"Reference","title":"Index","text":"","category":"section"},{"location":"reference/","page":"Reference","title":"Reference","text":"​","category":"page"},{"location":"reference/","page":"Reference","title":"Reference","text":"Pages = [\"reference.md\"]","category":"page"},{"location":"reference/","page":"Reference","title":"Reference","text":"​","category":"page"},{"location":"reference/","page":"Reference","title":"Reference","text":"Modules = [SparseMatricesCOO]","category":"page"},{"location":"reference/#SparseMatricesCOO.AbstractSparseMatrixCOO","page":"Reference","title":"SparseMatricesCOO.AbstractSparseMatrixCOO","text":"AbstractSparseMatrixCOO{Tv,Ti<:Integer} <: AbstractSparseMatrix{Tv,Ti}\n\nSupertype for matrix in sparse coordinate format (COO).\n\n\n\n\n\n","category":"type"},{"location":"reference/#SparseMatricesCOO.SparseMatrixCOO-Tuple{Integer, Integer, Vector, Vector, Vector}","page":"Reference","title":"SparseMatricesCOO.SparseMatrixCOO","text":"SparseMatrixCOO(m, n, rows, cols, vals)\n\nCreates a sparse matrix stored in COO format.\n\nExamples\n\njulia> A = SparseMatrixCOO(3, 4, [1, 2, 2, 4], [1, 2, 3, 4], [4.0, 3.0, -2.0, 6.0])\n3×4 SparseMatrixCOO{Float64, Int64} with 4 stored entries:\n     ┌─────┐\n   1 │⠀⠄⠀⠀⠀│ > 0\n   3 │⠀⠀⠁⠁⡀│ < 0\n     └─────┘\n     ⠀1⠀⠀⠀4⠀\n     ⠀nz = 4\n\n\n\n\n\n","category":"method"},{"location":"reference/#SparseArrays.nnz-Tuple{SparseMatrixCOO}","page":"Reference","title":"SparseArrays.nnz","text":"nnz(A)\n\nReturns the number of stored (filled) elements in a sparse array.\n\n\n\n\n\n","category":"method"},{"location":"reference/#SparseArrays.nonzeros-Tuple{SparseMatrixCOO}","page":"Reference","title":"SparseArrays.nonzeros","text":"nonzeros(A)\n\nReturn a vector of the structural nonzero values in sparse array A. This includes zeros that are explicitly stored in the sparse array. The returned vector points directly to the internal nonzero storage of A, and any modifications to the returned vector will mutate A as well. See rows.\n\n\n\n\n\n","category":"method"},{"location":"reference/#SparseMatricesCOO.coo_spzeros-Tuple{Any, Any, Any}","page":"Reference","title":"SparseMatricesCOO.coo_spzeros","text":"coo_spzeros(T, m, n)\n\nCreates a zero SparseMatrixCOO of type T with m rows and n columns.\n\n\n\n\n\n","category":"method"},{"location":"reference/#SparseMatricesCOO.rows-Tuple{SparseMatrixCOO}","page":"Reference","title":"SparseMatricesCOO.rows","text":"rows(A::AbstractSparseMatrixCOO)\n\nReturn a vector of the row indices of A. Any modifications to the returned vector will mutate A as well. Providing access to how the row indices are stored internally can be useful in conjunction with iterating over structural nonzero values. See also nonzeros.\n\n\n\n\n\n","category":"method"},{"location":"","page":"Home","title":"Home","text":"CurrentModule = SparseMatricesCOO","category":"page"},{"location":"#SparseMatricesCOO","page":"Home","title":"SparseMatricesCOO","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for SparseMatricesCOO.","category":"page"}]
}
